/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : adc_pal1.h
**     Project     : adc_pal_mpc5746c
**     Processor   : MPC5746C_256
**     Component   : adc_pal
**     Version     : Component SDK_MPC574x_04, Driver 01.00, CPU db: 3.00.000
**     Repository  : SDK_MPC574x_04
**     Compiler    : GNU C Compiler
**     Date/Time   : 2021-01-06, 13:38, # CodeGen: 0
**     Contents    :
**         ADC_Init                   - status_t ADC_Init(const adc_pal_instance_t instance, const adc_config_t *...
**         ADC_Deinit                 - status_t ADC_Deinit(const adc_pal_instance_t instance);
**         ADC_EnableHardwareTrigger  - status_t ADC_EnableHardwareTrigger(const adc_pal_instance_t instance, const...
**         ADC_DisableHardwareTrigger - status_t ADC_DisableHardwareTrigger(const adc_pal_instance_t instance, const...
**         ADC_StartGroupConversion   - status_t ADC_StartGroupConversion(const adc_pal_instance_t instance, const...
**         ADC_StopGroupConversion    - status_t ADC_StopGroupConversion(const adc_pal_instance_t instance, const...
**         ADC_EnableNotification     - status_t ADC_EnableNotification(const adc_pal_instance_t instance, const...
**         ADC_DisableNotification    - status_t ADC_DisableNotification(const adc_pal_instance_t instance, const...
**
**     Copyright 1997 - 2015 Freescale Semiconductor, Inc.
**     Copyright 2016-2017 NXP
**     All Rights Reserved.
**     
**     THIS SOFTWARE IS PROVIDED BY NXP "AS IS" AND ANY EXPRESSED OR
**     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
**     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
**     IN NO EVENT SHALL NXP OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
**     INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
**     SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
**     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
**     STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
**     IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
**     THE POSSIBILITY OF SUCH DAMAGE.
** ###################################################################*/
/*!
** @file adc_pal1.h
** @version 01.00
*/
/*!
**  @addtogroup adc_pal1_module adc_pal1 module documentation
**  @{
*/

#ifndef adc_pal1_H
#define adc_pal1_H
/* MODULE adc_pal1. */

/**
 * @page misra_violations MISRA-C:2012 violations
 *
 * @section [global]
 * Violates MISRA 2012 Advisory Rule 2.5, global macro not referenced
 * There are global macros defined to be used by the integrator and another one used as include guard.
 */

/* Include inherited beans */
#include "Cpu.h"
#include "adc_pal.h"


/*! @brief PAL instance information */
extern const adc_instance_t adc_pal1_instance;


/*! @brief Configuration structure 0 */
extern const adc_config_t adc_pal1_InitConfig0;

/*! @brief config 0 group configurations array */
extern const adc_group_config_t adc_pal1_GroupArray0[3u];

/*! @brief config 0 group 0 channel configuration array  */
extern adc_input_chan_t adc_pal1_ChansArray00[3u];
/*! @brief config 0 group 0 results buffer */
extern uint16_t adc_pal1_Results00[(3u) * (2u)];
/*! @brief config 0 group 0 callback function */
extern void adc_pal1_callback00(const adc_callback_info_t * const callbackInfo, void * userData);

/*! @brief config 0 group 1 channel configuration array  */
extern adc_input_chan_t adc_pal1_ChansArray01[1u];
/*! @brief config 0 group 1 results buffer */
extern uint16_t adc_pal1_Results01[(1u) * (1u)];

/*! @brief config 0 group 2 channel configuration array  */
extern adc_input_chan_t adc_pal1_ChansArray02[1u];
/*! @brief config 0 group 2 results buffer */
extern uint16_t adc_pal1_Results02[(1u) * (4u)];
/*! @brief config 0 group 2 callback function */
extern void adc_pal1_callback02(const adc_callback_info_t * const callbackInfo, void * userData);


/*! @brief Configuration structure 1 */
extern const adc_config_t adc_pal1_InitConfig1;

/*! @brief config 1 group configurations array */
extern const adc_group_config_t adc_pal1_GroupArray1[1u];

/*! @brief config 1 group 0 channel configuration array  */
extern adc_input_chan_t adc_pal1_ChansArray10[1u];
/*! @brief config 1 group 0 results buffer */
extern uint16_t adc_pal1_Results10[(1u) * (1u)];
/*! @brief config 1 group 0 callback function */
extern void adc_pal1_callback10(const adc_callback_info_t * const callbackInfo, void * userData);


#endif /* adc_pal1_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.1 [05.21]
**     for the NXP C55 series of microcontrollers.
**
** ###################################################################
*/

